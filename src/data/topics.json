{
	"boards": [
		{
			"id": 1,
			"title": "JavaScript",
			"topics": [
				{
					"id": 101,
					"title": "Фундамент языка",
					"subtopics": [
						{
							"id": 10101,
							"title": "Типы данных и приведение типов",
							"completed": 1,
							"items": [
								"примитивы vs объекты",
								"приведение типов (implicit/explicit)",
								"coercion, falsy/truthy",
								"разница strict / non-strict контекста"
							]
						},
						{
							"id": 10102,
							"title": "Работа с событиями",
							"completed": 0,
							"items": ["CustomEvent, addEventListener"]
						},
						{
							"id": 10103,
							"title": "Переменные, область видимости, hoisting",
							"completed": 1,
							"items": [
								"var / let / const",
								"TDZ (temporal dead zone)",
								"globalThis"
							]
						},
						{
							"id": 10104,
							"title": "Функции",
							"completed": 0,
							"items": [
								"function declaration vs expression",
								"стрелочные функции (включая особенности this)",
								"arguments vs rest parameters",
								"IIFE",
								"архитектурные сценарии (модули, async IIFE)"
							]
						},
						{
							"id": 10105,
							"title": "Контекст this",
							"completed": 0,
							"items": [
								"как определяется this в разных контекстах",
								"потеря контекста (колбэки, классы)",
								"bind, call, apply",
								"this в стрелочных функциях"
							]
						},
						{
							"id": 10106,
							"title": "Замыкания (Closures)",
							"completed": 0,
							"items": [
								"замыкания и область видимости",
								"архитектурные применения: дебаунс, троттлинг",
								"приватность данных"
							]
						},
						{
							"id": 10107,
							"title": "Каррирование",
							"completed": 0,
							"items": [
								"многоступенчатые вызовы (f(a)(b)(c))",
								"применение в HOF"
							]
						},
						{
							"id": 10108,
							"title": "Функции высшего порядка",
							"completed": 0,
							"items": [
								"что это",
								"композиция функций",
								"собственная реализация map/filter/reduce"
							]
						},
						{
							"id": 10109,
							"title": "Мемоизация",
							"completed": 0,
							"items": [
								"универсальный кеш для любых аргументов",
								"async-мемоизация"
							]
						},
						{
							"id": 10110,
							"title": "Error Handling",
							"completed": 0,
							"items": [
								"try / catch",
								"throw",
								"проброс ошибок",
								"кастомные Error-классы",
								"async try/catch"
							]
						}
					]
				},
				{
					"id": 102,
					"title": "Асинхронность и промисы",
					"subtopics": [
						{ "id": 10201, "title": "Колбэки", "completed": 0, "items": [] },
						{
							"id": 10202,
							"title": "Промисы",
							"completed": 0,
							"items": [
								"создание, then/catch/finally",
								"цепочки промисов",
								"методы: Promise.all, Promise.allSettled, Promise.race, Promise.any"
							]
						},
						{
							"id": 10203,
							"title": "async / await",
							"completed": 0,
							"items": [
								"обработка ошибок",
								"параллельное выполнение запросов",
								"Promise.all, allSettled, race"
							]
						}
					]
				},
				{
					"id": 103,
					"title": "Работа с коллекциями и данными",
					"subtopics": [
						{
							"id": 10301,
							"title": "Массивы",
							"completed": 0,
							"items": [
								"map, filter, reduce, sort",
								"some, every",
								"find, findIndex",
								"flat, flatMap",
								"slice, splice",
								"includes vs indexOf",
								"reduce, groupBy, Set/Map"
							]
						},
						{
							"id": 10302,
							"title": "Объекты",
							"completed": 0,
							"items": [
								"деструктуризация",
								"spread / rest",
								"Object.freeze, Object.seal",
								"shallow vs deep copy",
								"Object.entries, Object.values",
								"Optional chaining (?.)",
								"Nullish coalescing (??)"
							]
						},
						{
							"id": 10303,
							"title": "Set, Map, WeakSet, WeakMap",
							"completed": 0,
							"items": ["зачем нужны", "основные методы"]
						},
						{
							"id": 10304,
							"title": "JSON",
							"completed": 0,
							"items": ["JSON.stringify, JSON.parse", "replacer, reviver"]
						}
					]
				},
				{
					"id": 104,
					"title": "Работа с текстом и датами",
					"subtopics": [
						{
							"id": 10401,
							"title": "Работа со строками",
							"completed": 0,
							"items": [
								"шаблонные строки",
								"slice, substring",
								"includes, startsWith, endsWith",
								"split, join",
								"replace, replaceAll"
							]
						},
						{
							"id": 10402,
							"title": "Дата и время (Date API)",
							"completed": 0,
							"items": [
								"создание дат",
								"методы getDate, getMonth, getFullYear",
								"вычисление разницы дат"
							]
						}
					]
				},
				{
					"id": 105,
					"title": "Структура кода и архитектура",
					"subtopics": [
						{
							"id": 10501,
							"title": "Циклы и итерация",
							"completed": 0,
							"items": [
								"for, while, do-while",
								"for…of",
								"for…in",
								"break, continue"
							]
						},
						{
							"id": 10502,
							"title": "Модули",
							"completed": 0,
							"items": ["import/export", "ES-модули vs CommonJS"]
						}
					]
				}
			]
		},
		{
			"id": 2,
			"title": "React",
			"topics": [
				{
					"id": 201,
					"title": "React XXX",
					"subtopics": [
						{
							"id": 10101,
							"title": "XXXX",
							"completed": 2,
							"items": ["XXX"]
						}
					]
				}
			],
			"completed": 0
		}
	]
}
